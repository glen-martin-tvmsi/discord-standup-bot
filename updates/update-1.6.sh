#!/bin/bash
# updates/update-1.6.sh - Enhanced Logging System v1.6

set -Eeuo pipefail
trap 'log_error "Update failed" $LINENO' ERR

VERSION="1.6"
LOG_DIR="logs"
LOG_FILE="$LOG_DIR/update-${VERSION}.log"
SCRIPTS=("setup.sh" "build.sh" "test.sh" "deploy.sh" "aifeedback.sh")

log_message() {
    local level=$1
    local message=$2
    echo "[$(date '+%Y-%m-%dT%H:%M:%S%z')] [${level}] ${message}" | tee -a "$LOG_FILE"
}

log_error() {
    log_message "ERROR" "$1 at line $2"
    exit 1
}

# Initialize environment
mkdir -p "$LOG_DIR"
: > "$LOG_FILE"
log_message "INFO" "Starting System Update v${VERSION}"

# Create/update core scripts with enhanced logging
for script in "${SCRIPTS[@]}"; do
    script_path="scripts/${script}"
    
    log_message "DEBUG" "Processing ${script_path}"
    
    # Create script if missing
    if [[ ! -f "$script_path" ]]; then
        log_message "WARN" "Missing ${script_path} - Creating template"
        mkdir -p "scripts"
        touch "$script_path"
    fi

    # Add logging infrastructure
    sed -i '1i#!/bin/bash' "$script_path"
    sed -i '2i# Auto-generated by update-1.6.sh' "$script_path"
    sed -i '3iVERSION="1.6"' "$script_path"
    sed -i $'4iLOG_DIR="logs"\\\nLOG_FILE="$LOG_DIR/'${script%.sh}.log'"\\\n' "$script_path"
    sed -i '5iset -Eeuo pipefail' "$script_path"
    sed -i '6itrap '\''log_error "Script failure" $LINENO'\'' ERR' "$script_path"
    sed -i $'7i\\\nlog_message() {\\\n  local level=$1\\\n  local message=$2\\\n  echo "[$(date '\''+%Y-%m-%dT%H:%M:%S%z'\'')] [${level}] ${message}" | tee -a "$LOG_FILE"\\\n}\\\n' "$script_path"
    sed -i '8ilog_error() {\n  log_message "ERROR" "$1 at line $2"\n  exit 1\n}' "$script_path"
    sed -i '9i\\\n# Initialize logging\\\nmkdir -p "$LOG_DIR"\\\n: > "$LOG_FILE"\\\nlog_message "INFO" "Starting ${0##*/} v${VERSION}"\\\n' "$script_path"
done

# Update documentation
log_message "INFO" "Updating project documentation"
if [[ ! -f "README.md" ]]; then
    log_message "WARN" "Creating new README.md"
    cat > README.md <<'EOL'
# Discord Standup Bot System

## Version History
- 1.6 (Current): Enhanced logging across all subsystems
- 1.5: Core recording/transcription implementation
- 1.4: AI feedback diagnostics
- 1.1: Initial infrastructure setup

EOL
fi

# Add logging documentation
cat >> README.md <<'EOL'

## Logging Architecture (v1.6+)
- **Unified Format**: `[YYYY-MM-DDTHH:MM:SS+TZ] [LEVEL] Message`
- **Log Files**:
  - `update.log`: System update records
  - `setup.log`: Environment configuration
  - `build.log`: Compilation outputs  
  - `test.log`: Validation results
  - `deploy.log`: Service management
  - `aifeedback.log`: Diagnostic reports

